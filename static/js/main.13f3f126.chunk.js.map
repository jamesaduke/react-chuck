{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["URL","App","props","state","joke","categories","category","loading","loadingJoke","setUp","bind","getJoke","setCategory","this","className","src","logo","alt","width","InputPicker","data","style","placeholder","onSelect","val","IconButton","icon","Icon","placement","onClick","setState","fetch","then","resp","json","map","label","value","x","catch","err","Alert","error","url","console","log","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAAe,MAA0B,iC,6CCKnCA,G,OAAM,qCAwGGC,E,kDApGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,SAAS,EACTC,aAAa,GAEjB,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAXJ,E,gEAefG,KAAKJ,U,+BAIC,IAAD,OACL,OACI,sBAAKK,UAAU,UAAf,UACI,qBAAKC,IAAKC,EAAMC,IAAI,oBAAoBC,MAAO,MAC/C,2DACA,8BAEQ,qCACK,IAAML,KAAKV,MAAMC,SAI9B,gCACI,cAACe,EAAA,EAAD,CACIC,KAAMP,KAAKV,MAAME,WACjBgB,MAAO,CAAEH,MAAO,KAChBI,YAAY,kBACZC,SAAU,SAAAC,GACN,EAAKZ,YAAYY,MAGzB,cAACC,EAAA,EAAD,CACIC,KAAM,cAACC,EAAA,EAAD,CAAMD,KAAK,gBACjBE,UAAU,QACVd,UAAU,OACVe,QAAS,WACL,EAAKlB,WALb,qBAWJ,6B,8BAKH,IAAD,OACJE,KAAKiB,SAAS,CAAEvB,SAAS,IACzBwB,MAAM/B,EAAM,cACPgC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACF,IAAM5B,EAAa4B,EAAKE,KAAI,SAAAX,GACxB,MAAO,CAAEY,MAAOZ,EAAKa,MAAOb,MAEhC,EAAKM,SAAS,CAAEzB,WAAYA,IAC5B,EAAKyB,SAAS,CAAExB,SAAU,cAE7B0B,MAAK,SAAAM,GACF,OAAOP,MAAM/B,EAAM,aAEtBgC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACF,EAAKH,SAAS,CAAE1B,KAAM6B,EAAKI,MAAO9B,SAAS,OAE9CgC,OAAM,SAAAC,GAAG,OACNC,IAAMC,MAAM,4D,gCAGd,IAAD,OACDC,EAAM3C,EAAM,SACY,WAAxBa,KAAKV,MAAMG,WACXqC,GAAO,aAAe9B,KAAKV,MAAMG,UAGrCO,KAAKiB,SAAS,CAAEtB,aAAa,IAC7BuB,MAAMY,GACDX,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACF,EAAKH,SAAS,CAAE1B,KAAM6B,EAAKI,QAC3B,EAAKP,SAAS,CAAEtB,aAAa,OAEhC+B,OAAM,SAAAC,GAAG,OAAGI,QAAQC,IAAIL,Q,kCAGrBlC,GACRO,KAAKiB,SAAS,CAAExB,SAAUA,Q,GAhGhBwC,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.13f3f126.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {Alert, InputPicker, IconButton, Icon } from \"rsuite\";\nimport 'rsuite/dist/styles/rsuite-default.css'\nconst URL = \"https://api.chucknorris.io/jokes/\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            joke: \"\",\n            categories: [],\n            category: \"\",\n            loading: true,\n            loadingJoke: false\n        };\n        this.setUp = this.setUp.bind(this);\n        this.getJoke = this.getJoke.bind(this);\n        this.setCategory = this.setCategory.bind(this);\n    }\n\n    componentDidMount() {\n        this.setUp();\n    }\n\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <img src={logo} alt=\"chuck norris logo\" width={400} />\n                <h1>Chuck's Categorised Jokes</h1>\n                <div>\n                    {\n                        <blockquote>\n                            {\" \" + this.state.joke}\n                        </blockquote>\n                    }\n                </div>\n                <div>\n                    <InputPicker\n                        data={this.state.categories}\n                        style={{ width: 224 }}\n                        placeholder=\"Choose Category\"\n                        onSelect={val => {\n                            this.setCategory(val);\n                        }}\n                    />\n                    <IconButton\n                        icon={<Icon icon=\"arrow-right\" />}\n                        placement=\"right\"\n                        className=\"next\"\n                        onClick={() => {\n                            this.getJoke();\n                        }}\n                    >\n                        Next\n                    </IconButton>\n                </div>\n                <div />\n            </div>\n        );\n\n    }\n    setUp() {\n        this.setState({ loading: true });\n        fetch(URL + \"categories\")\n            .then(resp => resp.json())\n            .then(resp => {\n                const categories = resp.map(val => {\n                    return { label: val, value: val };\n                });\n                this.setState({ categories: categories });\n                this.setState({ category: \"random\" });\n            })\n            .then(x => {\n                return fetch(URL + \"random\");\n            })\n            .then(resp => resp.json())\n            .then(resp => {\n                this.setState({ joke: resp.value, loading: false });\n            })\n            .catch(err =>\n                Alert.error(\"Oops an unexpected error occurred! Try again later.\")\n            );\n    }\n    getJoke(){\n        let url = URL + \"random\";\n        if (this.state.category !== \"random\") {\n            url += \"?category=\" + this.state.category;\n        }\n\n        this.setState({ loadingJoke: true });\n        fetch(url)\n            .then(resp => resp.json())\n            .then(resp => {\n                this.setState({ joke: resp.value });\n                this.setState({ loadingJoke: false });\n            })\n            .catch(err =>console.log(err));\n    }\n\n    setCategory(category) {\n        this.setState({ category: category });\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}